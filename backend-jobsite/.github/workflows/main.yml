name: Job Service CI

on:
  push:
    branches: [main, feat/cdci]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: 
          - ubuntu-latest
        architecture:
          - x64

    steps:
      - uses: actions/checkout@v2

      - name: Setup NodeJs
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Package install
        run: yarn install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
        env:
          AWS_REGION: us-east-2

      - name: ECR Login
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker build and push
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: jobs-api
          IMAGE_TAG: '1.0'
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deployment
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 816674678256.dkr.ecr.us-east-2.amazonaws.com
          docker -H $TARGET_HOST:$TARGET_PORT rm -f jobs-api
          docker -H $TARGET_HOST:$TARGET_PORT pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker -H $TARGET_HOST:$TARGET_PORT run --name jobs-api -d -p 5000:5000 -e "SECRET=$APP_SECRET" -e "DB_URL=$DB_URL" $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        env:
          TARGET_HOST: 18.220.13.101
          TARGET_PORT: 2375
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: jobs-api
          IMAGE_TAG: '1.0'
          APP_SECRET: ${{ secrets.APP_SECRET }}
          DB_URL: ${{ secrets.DB_URL }}


